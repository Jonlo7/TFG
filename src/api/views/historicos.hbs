<body>
  {{> csrftokeninput }}
  <div class="grid grid-cols-1 md:grid-cols-2 gap-12 mx-auto px-4 py-8 w-full">
    <div class="col-span-1 md:col-span-1 bg-white dark:bg-gray-950 rounded-lg shadow-lg">
      <div class="p-4 border-b dark:border-gray-800">
        <h2 class="text-lg font-semibold">Historial de Lotes</h2>
      </div>
      <div class="p-4">
        <div class="mb-4">
          <input type="text" id="searchLote"
            class="flex h-10 rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 w-full"
            placeholder="Buscar por número de lote, fecha, etc." />
        </div>
        <div class="relative w-full overflow-auto">
          <table id="tablaLote" class="w-full caption-bottom text-sm">
            <thead class="[&amp;_tr]:border-b">
              <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  ID Lote
                </th>
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  Fecha Inicio
                </th>
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  Fecha Fin
                </th>
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  Número de Botellas
                </th>
              </tr>
            </thead>
            <tbody class="[&amp;_tr:last-child]:border-0">
              {{#each historialLotes}}
              <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{id_Lote}}
                </td>
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{date horaInicio}}
                </td>
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{date horaFin}}
                </td>
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{botellasCorrectas}}
                </td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <div class="col-span-1 md:col-span-1 bg-white dark:bg-gray-950 rounded-lg shadow-lg">
      <div class="p-4 border-b dark:border-gray-800">
        <h2 class="text-lg font-semibold">Historial de Alarmas</h2>
      </div>
      <div class="p-4">
        <div class="mb-4">
          <input type="text" id="searchAlarma"
            class="flex h-10 rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 w-full"
            placeholder="Buscar por ID, nombre, etc." />
        </div>
        <div class="relative w-full overflow-auto">
          <table id="tablaAlarma" class=" w-full caption-bottom text-sm">
            <thead class="[&amp;_tr]:border-b">
              <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  ID Historico
                </th>
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  ID Alarma
                </th>
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  Hora de Salto
                </th>
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  Hora de Resolución
                </th>
                <th
                  class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                  Número de Lote
                </th>
              </tr>
            </thead>
            <tbody class="[&amp;_tr:last-child]:border-0">
              {{#each historialAlarmas}}
              <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{id_Historico}}
                </td>
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{id_Alarma}}
                </td>
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{date horaSalto}}
                </td>
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{date horaResolucion}}
                </td>
                <td class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">
                  {{id_Lote}}
                </td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</body>
<script>

  let alarmasData;
  let estadoAnterior = new Array(11).fill(false);
  let estadoAnterioridLote = 0;
  let estadoAnteriorBotellasLote = 0;

  window.onload = async function () {
    const responseAlarmas = await fetch('/alarmas');
    alarmasData = await responseAlarmas.json();
    const responseLotes = await fetch('/tiempo-real');
    const primeraData = await responseLotes.json();
    estadoAnterioridLote = primeraData.todasTiempoReal.find(c => c.clave === 'idLote').valorParseado;
    estadoAnteriorBotellasLote = primeraData.todasTiempoReal.find(c => c.clave === 'botellasLote').valorParseado;
  };

  ['Lote', 'Alarma'].forEach(function (i) {
    document.getElementById('search' + i).addEventListener('keyup', function () {
      let searchValue = isNaN(this.value) ? this.value.toLowerCase() : this.value;
      let tableRows = document.querySelectorAll('#tabla' + i + ' tbody tr');

      tableRows.forEach(function (row) {
        let rowText = row.textContent.toLowerCase();
        if (rowText.indexOf(searchValue) !== -1) {
          row.style.display = "";
        } else {
          row.style.display = "none";
        }
      });
    });
  });



  async function check() {
    let response = await fetch('/tiempo-real');
    let data = await response.json();
    let alarmas = new Array(11);
    alarmas[0] = data.todasTiempoReal.find(c => c.clave === 'Alarma0').valorParseado;
    alarmas[10] = data.todasTiempoReal.find(c => c.clave === 'Alarma10').valorParseado;
    alarmas[3] = data.todasTiempoReal.find(c => c.clave === 'Alarma3').valorParseado;
    alarmas[6] = data.todasTiempoReal.find(c => c.clave === 'Alarma6').valorParseado;
    alarmas[5] = data.todasTiempoReal.find(c => c.clave === 'Alarma5').valorParseado;
    alarmas[1] = data.todasTiempoReal.find(c => c.clave === 'Alarma1').valorParseado;
    alarmas[2] = data.todasTiempoReal.find(c => c.clave === 'Alarma2').valorParseado;
    alarmas[4] = data.todasTiempoReal.find(c => c.clave === 'Alarma4').valorParseado;
    alarmas[7] = data.todasTiempoReal.find(c => c.clave === 'Alarma7').valorParseado;
    alarmas[9] = data.todasTiempoReal.find(c => c.clave === 'Alarma9').valorParseado;
    alarmas[8] = data.todasTiempoReal.find(c => c.clave === 'Alarma8').valorParseado;
    for (let i = 0; i < alarmas.length; i++) {
      if (estadoAnterior[i] !== alarmas[i]) {
        let denom = 'Alarma' + i;
        let setAlarma = 'setAlarma' + i;
        let resetAlarma = 'resetAlarma' + i;
        let responseLotes = await fetch('/lotes');
        let lotes = await responseLotes.json();
        if (alarmas[i] === true) {
          console.log('Alarma ' + i + ' ha saltado');
          let alarmaAscendente = alarmasData.todasAlarmas.find(c => c.denom === denom).id_Alarma;
          let horaSalto = data.todasTiempoReal.find(c => c.clave === setAlarma).valorParseado;
          numLote = data.todasTiempoReal.find(c => c.clave === 'idLote').valorParseado;
          let idLote = lotes.todosLotes.find(c => c.numLote === numLote).id_Lote;
          let body = {
            idAlarma: alarmaAscendente,
            horaSalto: horaSalto,
            idLote: idLote
          };
          fetch('/flanco-ascendente', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
              body,
            }),
          });
        } else {
          console.log('Alarma ' + i + ' ha sido resuelta');
          let alarmaDescendente = alarmasData.todasAlarmas.find(c => c.denom === denom).id_Alarma;
          let horaSalto = data.todasTiempoReal.find(c => c.clave === setAlarma).valorParseado;
          numLote = data.todasTiempoReal.find(c => c.clave === 'idLote').valorParseado;
          let idLote = lotes.todosLotes.find(c => c.numLote === numLote).id_Lote;
          let horaResolucion = data.todasTiempoReal.find(c => c.clave === resetAlarma).valorParseado;
          let body = {
            idAlarma: alarmaDescendente,
            horaSalto: horaSalto,
            idLote: idLote,
            horaResolucion: horaResolucion
          };
          fetch('/flanco-descendente', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
              body,
            }),
          });
        }
      }
    }
    estadoAnterior = alarmas;

    let idLote = data.todasTiempoReal.find(c => c.clave === 'idLote').valorParseado;
    if (estadoAnterioridLote !== idLote) {
      let fechaInicioLote = data.todasTiempoReal.find(c => c.clave === 'fechaInicioLote').valorParseado;
      let body = {
        numLote: idLote,
        horaInicio: fechaInicioLote
      };
      console.log(body);
      fetch('/nuevo-lote', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-csrf-token': document.querySelector('input[name="_csrf"]').value
        },
        body: JSON.stringify({
          body,
        }),
      });
    }

    let botellasLote = data.todasTiempoReal.find(c => c.clave === 'botellasLote').valorParseado;
    if (estadoAnteriorBotellasLote !== botellasLote) {
      let fechaFinLote = data.todasTiempoReal.find(c => c.clave === 'fechaFinLote').valorParseado;
      let fechaInicioLote = data.todasTiempoReal.find(c => c.clave === 'fechaInicioLote').valorParseado;
      let body = {
        numLote: idLote,
        botellasCorrectas: botellasLote,
        horaInicio: fechaInicioLote,
        horaFin: fechaFinLote
      };
      fetch('/fin-lote', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-csrf-token': document.querySelector('input[name="_csrf"]').value
        },
        body: JSON.stringify({
          body,
        }),
      });
    }
    estadoAnterioridLote = idLote;
    estadoAnteriorBotellasLote = botellasLote;
  }

  setInterval(check, 500);
</script>