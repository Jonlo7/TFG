<head>

    <style>
        .parametros,
        .lote,
        .maquina,
        .botones,
        .estado,
        .alarmas {
            background-color: #fff;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
            padding: 0.5rem;
            display: flex;
            flex-direction: column;
        }

        .col {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            padding: 0.5rem;
            box-sizing: border-box;
        }

        @media (min-width: 600px) {

            .col-1,
            .col-2,
            .col-3 {
                flex: 1;
            }

            .col-1 {
                flex: 0 0 29%;
            }

            .col-2 {
                flex: 0 0 40%;
            }

            .col-3 {
                flex: 0 0 29%;
            }
        }

        .parametros-lote {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            gap: 1.5rem;
        }

        .maquina-botones {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            gap: 0.5rem;
        }

        .maquina {
            flex: 0 1 55%;
        }

        .botones {
            flex: 0 1 45%;
        }

        .estado-alarmas {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            gap: 0.5rem;
        }

        .estado {
            flex: 0 1 25%;
        }

        .alarmas {
            flex: 0 1 75%;
        }

        img {
            width: 100%;
            height: auto;
            object-fit: contain;
        }

        .botones {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            gap: 0.5rem;
        }

        .botones .activacion-buttons,
        .botones .salidas-buttons,
        .botones .action-buttons {
            display: flex;
            justify-content: center;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

        .switch input {
            opacity: 0;
            position: absolute;
            width: 60px;
            height: 40px;
            z-index: 20;
        }

        .slider {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }

        .botones input:checked+.block {
            background-color: #2767f3;
        }

        .botones input:checked+.block .dot {
            transform: translateX(24px);
        }

        .alarmas input:checked+.block {
            background-color: #FF0000;
        }

        .alarmas input:checked+.block .dot {
            transform: translateX(24px);
        }

        .parametros input:checked+.block {
            background-color: #4CAF50;
        }

        .parametros input:checked+.block .dot {
            transform: translateX(24px);
        }

        .botones .dot {
            transition: transform 0.3s ease;
        }

        .parametros .dot {
            transition: transform 0.3s ease;
        }

        .alarmas .dot {
            transition: transform 0.3s ease;
        }

        .action-buttons {
            justify-content: center;
        }

        .action-buttons button:first-child {
            margin-right: 30px;
        }
    </style>
</head>

<body>
    {{> csrftokeninput }}
    <div class="space-y-4 col col-1">
        <div class="parametros-lote">
            <div class="parametros">
                <h3 class="text-lg font-bold">Parametros</h3>
                <div class="grid grid-cols-2 gap-4">
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="nivel-tanque"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Nivel
                            del Tanque</label>
                        <input id="nivel-tanque"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400"
                            type="number" disabled />
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="caudalimetro"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Caudalimetro</label>
                        <input id="caudalimetro"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400"
                            type="number" disabled />
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="aspirador"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Aspirador</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="aspirador" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="cinta"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Cinta</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="cinta" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="motor"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Motor</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="motor" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="valvula"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Valvula</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="valvula" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="sensor-nivel-alto"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Sensor Nivel Alto</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="sensor-nivel-alto" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="sensor-nivel-bajo"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Sensor Nivel Bajo</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="sensor-nivel-bajo" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="sensor-giro"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Sensor
                            Giro</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="sensor-giro" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="lote">
                <h3 class="text-lg font-bold">Lote</h3>
                <div class="grid grid-cols-2 gap-3">
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="numero-lote"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Numero
                            del lote</label>
                        <input id="numero-lote"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400"
                            type="number" disabled />
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="fechaInicio-lote"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Fecha inicio</label>
                        <input id="fechaInicio-lote"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400"
                            type="datetime" disabled />
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="fechaFin-lote"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Fecha
                            cierre</label>
                        <input id="fechaFin-lote"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400"
                            type="datetime" disabled />
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="numeroBotellas-lote"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Numero de
                            botellas</label>
                        <input id="numeroBotellas-lote"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400"
                            type="number" disabled />
                    </div>
                    <div class="bg-white p-3 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="tiempo-lote"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Tiempo
                            de produccion</label>
                        <input id="tiempo-lote"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400"
                            type="number" disabled />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="space-y-2 col col-2">
        <div class="maquina-botones">
            <div class="maquina">
                <h3 class="text-lg font-bold">Maquina Llenadora</h3>
                <img src="/styles/images/llenadora.png" alt="Imagen principal" class="w-full h-auto rounded-md"
                    style="aspect-ratio: 425 / 250; object-fit: contain;" />
            </div>
            {{#if isTecnico}}
            <div class="botones space-y-2">
                <div class="flex justify-between">
                    <button onclick="bWEBMarcha()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-4/12 me-2 mb-2">Marcha</button>
                    <button onclick="bWEBParo()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-4/12 me-2 mb-2">Paro</button>
                    <button onclick="bWEBEmergencia()"
                        class="text-white bg-gradient-to-r from-red-500 via-red-600 to-red-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-4/12 me-2 mb-2">Emergencia</button>
                </div>
                <div class="flex justify-center items-center space-x-2">
                    <label for="mode-switch">Automático</label>
                    <div class="relative inline-block w-14 h-8 align-middle transition duration-200 ease-in switch">
                        <input type="checkbox" id="mode-switch" onclick="bWEBModoAuto()" />
                        <div class="block bg-gray-300 w-14 h-8 rounded-full slider z-10">
                            <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                        </div>
                    </div>
                    <label for="mode-switch">Manual</label>
                </div>
                <div class="flex justify-between">
                    <button onclick="bWEBCinta()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-2/12 me-2 mb-2">Cinta</button>
                    <button onclick="bWEBAspiradora()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-2/12 me-2 mb-2">Aspiradora</button>
                    <button onclick="bWEBMotorLlenadora()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-2/12 me-2 mb-2">Motor
                        Giro</button>
                    <button onclick="bWEBValvula()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-2/12 me-2 mb-2">Valvula</button>
                </div>
                <div class="flex justify-between">
                    <button onclick="bWEBCrearLote()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-5/12 me-2 mb-2 ml-10">Crear
                        Lote</button>
                    <button onclick="bWEBTerminarLote()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-5/12 me-2 mb-2 mr-10">Terminar
                        Lote</button>
                </div>
                <div class="flex justify-between ">
                    <button onclick="bWEBResetCounterEntrada()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-5/12 me-2 mb-2 ml-10">Resetear
                        Contador Entrada
                    </button>
                    <button onclick="bWEBResetCounterSalida()"
                        class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-1 py-2.5 text-center w-5/12 me-2 mb-2 mr-10">Resetear
                        Contador Salida
                    </button>
                </div>
            </div>
            {{/if}}
        </div>
    </div>
    <div class="space-y-4 col col-3">
        <div class="estado-alarmas">
            <div class="estado ">
                <h3 class="text-lg font-bold">Estado de la maquina</h3>
                <div class="flex items-center justify-center gap-4 h-full mb-4">
                    <div
                        class="mMarcha w-12 h-12 rounded-full bg-gray-300 text-white flex items-center justify-center text-2xl font-bold">
                        M</div>
                    <div
                        class="mParo w-12 h-12 rounded-full bg-gray-300 text-white flex items-center justify-center text-2xl font-bold">
                        P</div>
                    <div
                        class="mEmergencia w-12 h-12 rounded-full bg-gray-300 text-white flex items-center justify-center text-2xl font-bold">
                        E</div>
                </div>
            </div>
            <div class="alarmas">
                <h3 class="text-lg font-bold">Alarmas</h3>
                <div class="grid grid-cols-2 gap-4">
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="paro-inactividad"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Paro por
                            inactividad</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="paro-inactividad" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="seta-emergencia"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Seta
                            de emergencia</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="seta-emergencia" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="llenado-botellas"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Llenado de
                            Botellas</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="llenado-botellas" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="nivel-tanque-alto"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Nivel tanque alto</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="nivel-tanque-alto" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider" /div>
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="nivel-tanque-bajo"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Nivel tanque bajo</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="nivel-tanque-bajo" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="no-entra-caudal"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">No
                            entra caudal</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="no-entra-caudal" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="sigue-entrando-caudal"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Sigue entrando
                            caudal</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="sigue-entrando-caudal" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="fallo-motor"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Fallo
                            motor</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="fallo-motor" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="fallo-sensores"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Fallo
                            sensores</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="fallo-sensores" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="sensor-nivelAlto"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Sensor nivel alto</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="sensor-nivelAlto" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white p-4 rounded-lg shadow-md dark:bg-gray-950">
                        <label for="sensor-nivelBajo"
                            class="block text-sm font-medium text-gray-700 dark:text-gray-400">Sensor nivel bajo</label>
                        <div
                            class="relative inline-block w-14 h-8 align-middle select-none transition duration-200 ease-in switch">
                            <input type="checkbox" id="sensor-nivelBajo" class="sr-only" disabled />
                            <div class="block bg-gray-300 w-14 h-8 rounded-full slider">
                                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    async function obtenerEstadoLlenadora() {
        try {
            const response = await fetch('/tiempo-real');
            const data = await response.json();
            document.getElementById('nivel-tanque').value = data.todasTiempoReal.find(c => c.clave === 'nivelTanque').valorParseado;
            document.getElementById('caudalimetro').value = data.todasTiempoReal.find(c => c.clave === 'caudalimetro').valorParseado;
            document.getElementById('aspirador').checked = data.todasTiempoReal.find(c => c.clave === 'sAspiradora').valorParseado;
            document.getElementById('cinta').checked = data.todasTiempoReal.find(c => c.clave === 'sCinta').valorParseado;
            document.getElementById('motor').checked = data.todasTiempoReal.find(c => c.clave === 'sMotorLlenadora').valorParseado;
            document.getElementById('valvula').checked = data.todasTiempoReal.find(c => c.clave === 'sValvula').valorParseado;
            document.getElementById('sensor-nivel-alto').checked = data.todasTiempoReal.find(c => c.clave === 'nivelAlto').valorParseado;
            document.getElementById('sensor-nivel-bajo').checked = data.todasTiempoReal.find(c => c.clave === 'nivelBajo').valorParseado;
            document.getElementById('sensor-giro').checked = data.todasTiempoReal.find(c => c.clave === 'giro').valorParseado;
            document.getElementById('numero-lote').value = data.todasTiempoReal.find(c => c.clave === 'idLote').valorParseado;
            document.getElementById('fechaInicio-lote').value = data.todasTiempoReal.find(c => c.clave === 'fechaInicioLote').valorParseado;
            document.getElementById('fechaFin-lote').value = data.todasTiempoReal.find(c => c.clave === 'fechaFinLote').valorParseado;
            document.getElementById('numeroBotellas-lote').value = data.todasTiempoReal.find(c => c.clave === 'botellasLote').valorParseado;
            document.getElementById('tiempo-lote').value = data.todasTiempoReal.find(c => c.clave === 'tiempoTrabajo').valorParseado;
            let mMarcha = data.todasTiempoReal.find(c => c.clave === 'mMarcha').valorParseado;
            if (mMarcha) {
                document.querySelector('.mMarcha').style.backgroundColor = '#4CAF50';
            } else {
                document.querySelector('.mMarcha').style.backgroundColor = 'rgba(209, 213, 219, var(--tw-bg-opacity))';
            }
            let mParo = data.todasTiempoReal.find(c => c.clave === 'mParo').valorParseado;
            if (mParo) {
                document.querySelector('.mParo').style.backgroundColor = 'rgba(234, 179, 8, var(--tw-bg-opacity))';
            } else {
                document.querySelector('.mParo').style.backgroundColor = 'rgba(209, 213, 219, var(--tw-bg-opacity))';
            }
            let mEmergencia = data.todasTiempoReal.find(c => c.clave === 'mEmergencia').valorParseado;
            if (mEmergencia) {
                document.querySelector('.mEmergencia').style.backgroundColor = 'rgba(239, 68, 68, var(--tw-bg-opacity))';
            } else {
                document.querySelector('.mEmergencia').style.backgroundColor = 'rgba(209, 213, 219, var(--tw-bg-opacity))';
            }
            document.getElementById('paro-inactividad').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma0').valorParseado;
            document.getElementById('seta-emergencia').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma10').valorParseado;
            document.getElementById('llenado-botellas').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma3').valorParseado;
            document.getElementById('nivel-tanque-alto').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma6').valorParseado;
            document.getElementById('nivel-tanque-bajo').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma5').valorParseado;
            document.getElementById('no-entra-caudal').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma1').valorParseado;
            document.getElementById('sigue-entrando-caudal').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma2').valorParseado;
            document.getElementById('fallo-motor').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma4').valorParseado;
            document.getElementById('fallo-sensores').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma7').valorParseado;
            document.getElementById('sensor-nivelAlto').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma9').valorParseado;
            document.getElementById('sensor-nivelBajo').checked = data.todasTiempoReal.find(c => c.clave === 'Alarma8').valorParseado;


        } catch (error) {
            console.error('Error:', error);
        }
    }

    setInterval(obtenerEstadoLlenadora, 1000);

    async function bWEBMarcha() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBMarcha: true,
            }),
        });
    }
    //funciones para los demas botones
    async function bWEBParo() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBParo: true,
            }),
        });
    }
    async function bWEBEmergencia() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBEmergencia: true,
            }),
        });
    }
    async function bWEBModoAuto() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBModoAuto: document.getElementById('mode-switch').checked,
            }),
        });
    }
    async function bWEBAspiradora() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBAspiradora: true,
            }),
        });
    }
    async function bWEBCinta() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBCinta: true,
            }),
        });
    }
    async function bWEBMotorLlenadora() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBMotorLlenadora: true,
            }),
        });
    }
    async function bWEBValvula() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBValvula: true,
            }),
        });
    }
    async function bWEBCrearLote() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBCrearLote: true,
            }),
        });
    }
    async function bWEBTerminarLote() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBTerminarLote: true,
            }),
        });
    }
    async function bWEBResetCounterEntrada() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBResetCounterEntrada: true,
            }),
        });
    }
    async function bWEBResetCounterSalida() {
        fetch('/botones', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-csrf-token': document.querySelector('input[name="_csrf"]').value
            },
            body: JSON.stringify({
                bWEBResetCounterSalida: true,
            }),
        });
    }

    let estadoAnterior = new Array(11).fill(false);

    async function checkAlarmas() {
        let response = await fetch('/tiempo-real');
        let data = await response.json();
        let alarmas = new Array(11);
        let responseLotes = await fetch('/lotes');
        let lotes = await responseLotes.json();
        alarmas[0] = data.todasTiempoReal.find(c => c.clave === 'Alarma0').valorParseado;
        alarmas[10] = data.todasTiempoReal.find(c => c.clave === 'Alarma10').valorParseado;
        alarmas[3] = data.todasTiempoReal.find(c => c.clave === 'Alarma3').valorParseado;
        alarmas[6] = data.todasTiempoReal.find(c => c.clave === 'Alarma6').valorParseado;
        alarmas[5] = data.todasTiempoReal.find(c => c.clave === 'Alarma5').valorParseado;
        alarmas[1] = data.todasTiempoReal.find(c => c.clave === 'Alarma1').valorParseado;
        alarmas[2] = data.todasTiempoReal.find(c => c.clave === 'Alarma2').valorParseado;
        alarmas[4] = data.todasTiempoReal.find(c => c.clave === 'Alarma4').valorParseado;
        alarmas[7] = data.todasTiempoReal.find(c => c.clave === 'Alarma7').valorParseado;
        alarmas[9] = data.todasTiempoReal.find(c => c.clave === 'Alarma9').valorParseado;
        alarmas[8] = data.todasTiempoReal.find(c => c.clave === 'Alarma8').valorParseado;
        for (let i = 0; i < alarmas.length; i++) {
            if (estadoAnterior[i] !== alarmas[i]) {
                let denom = 'Alarma' + i;
                let setAlarma = 'setAlarma' + i;
                let resetAlarma = 'resetAlarma' + i;
                if (alarmas[i] === true) {
                    console.log('Alarma ' + i + ' ha saltado');
                    let alarmaAscendente = alarmasData.todasAlarmas.find(c => c.denom === denom).id_Alarma;
                    let horaSalto = data.todasTiempoReal.find(c => c.clave === setAlarma).valorParseado;
                    numLote = data.todasTiempoReal.find(c => c.clave === 'idLote').valorParseado;
                    let idLote = lotes.todosLotes.find(c => c.numLote === numLote).id_Lote;
                    let body = {
                        idAlarma: alarmaAscendente,
                        horaSalto: horaSalto,
                        idLote: idLote
                    };
                    console.log(body);
                    fetch('/flanco-ascendente', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-csrf-token': document.querySelector('input[name="_csrf"]').value
                        },
                        body: JSON.stringify({
                            body,
                        }),
                    });

                } else {
                    console.log('Alarma ' + i + ' ha sido resuelta');
                    let alarmaDescendente = alarmasData.todasAlarmas.find(c => c.denom === denom).id_Alarma;
                    let horaSalto = data.todasTiempoReal.find(c => c.clave === setAlarma).valorParseado;
                    numLote = data.todasTiempoReal.find(c => c.clave === 'idLote').valorParseado;
                    let idLote = lotes.todosLotes.find(c => c.numLote === numLote).id_Lote;
                    let horaResolucion = data.todasTiempoReal.find(c => c.clave === resetAlarma).valorParseado;
                    let body = {
                        idAlarma: alarmaDescendente,
                        horaSalto: horaSalto,
                        idLote: idLote,
                        horaResolucion: horaResolucion
                    };
                    console.log(body);
                    fetch('/flanco-descendente', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-csrf-token': document.querySelector('input[name="_csrf"]').value
                        },
                        body: JSON.stringify({
                            body,
                        }),
                    });
                }
            }
        }
        estadoAnterior = alarmas;
    }

    setInterval(checkAlarmas, 500);

</script>